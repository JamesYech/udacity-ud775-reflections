What happens when you initialize a repository? Why do you need to do it?

Initializing a repository prepares it to track files and changes.  Git
sets up the folders and logs it needs to track these changes.


How is the staging area different from the working directory and the repository? What value do you think it offers?

The repository is the reference or commited set, the working directory is the set that is
currently being modified.  The staging area is where modified files are or changes are
set prior to commiting them to the repository.


How can you use the staging area to make sure you have one commit per logical change?

Weird question.  I would add one changed file, or a group of files if they pertained to the
same change, to the staging area.  I should use git diff to make sure the changes are in the
staging area and git diff --staged to ensure that the changes are different from the current
commit.


What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When I want to make a major change that is different than the original intent.  Such as significant or expermental change to the envirment and I expect the final outcome will be different that the master.
Having a separate branch allows be to work on this project without compromising the intent of the
master.

